name: Update tabi theme

on:
  workflow_dispatch:
  schedule:
    - cron: "5 0 * * 1"  # Weekly on Mondays at 5 past midnight UTC

jobs:
  update-tabi:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check for updates
        id: check
        run: |
          cd themes/tabi
          CURRENT=$(git rev-parse HEAD)
          git fetch
          git checkout origin/main
          NEW=$(git rev-parse HEAD)
          if [ "$CURRENT" != "$NEW" ]; then
            # Get main changelog
            MAIN_CHANGELOG=$(git log --pretty=format:"- %s [%h](https://github.com/welpo/tabi/commit/%H)" $CURRENT..$NEW | \
              grep -v -E '^- .*(misc|misc\([^)]+\)):' | \
              sed -E 's/#([0-9]+)/[#\1](https:\/\/github.com\/welpo\/tabi\/pull\/\1)/g')

            # Get misc changelog
            MISC_CHANGELOG=$(git log --pretty=format:"- %s [%h](https://github.com/welpo/tabi/commit/%H)" $CURRENT..$NEW | \
              grep -E '^- .*(misc|misc\([^)]+\)):' | \
              sed -E 's/#([0-9]+)/[#\1](https:\/\/github.com\/welpo\/tabi\/pull\/\1)/g')

            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "old_version=${CURRENT:0:7}" >> "$GITHUB_OUTPUT"
            echo "new_version=${NEW:0:7}" >> "$GITHUB_OUTPUT"
            echo "main_changelog<<EOF" >> "$GITHUB_OUTPUT"
            echo "$MAIN_CHANGELOG" >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
            echo "misc_changelog<<EOF" >> "$GITHUB_OUTPUT"
            echo "$MISC_CHANGELOG" >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
          fi
          cd ../..

      - name: Create Pull Request
        if: steps.check.outputs.has_changes == 'true'
        shell: bash
        run: |
          # Set branch name
          BRANCH="update-tabi-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH"

          # Commit changes
          git add themes/tabi
          git commit -m "‚¨ÜÔ∏è Update tabi

          From: ${{ steps.check.outputs.old_version }}
          To: ${{ steps.check.outputs.new_version }}

          Update tabi to the latest version from https://github.com/welpo/tabi"

          # Push branch
          git push origin "$BRANCH"

          # Create temporary file for breaking changes warning
          if echo "${{ steps.check.outputs.changelog }}" | grep -E '^- (üí•|.*!:)'; then
            echo "> [!WARNING]
            > This update includes breaking changes (marked with ! or üí•)! Please review the changelog carefully before merging.
            " > breaking.txt
            BREAKING_WARNING="$(cat breaking.txt)"
            rm breaking.txt
          else
            BREAKING_WARNING=""
          fi

          # Create temporary file for misc changes
          if [ -n "${{ steps.check.outputs.misc_changelog }}" ]; then
            echo "<details>
            <summary>Show/hide miscellaneous changes</summary>

            ${{ steps.check.outputs.misc_changelog }}
            </details>" > misc.txt
            MISC_SECTION="$(cat misc.txt)"
            rm misc.txt
          else
            MISC_SECTION=""
          fi

          # Create PR description file
          echo "## Changes in this update

          Updating \`themes/tabi\` from [\`${{ steps.check.outputs.old_version }}\`](https://github.com/welpo/tabi/commit/${{ steps.check.outputs.old_version }}) to [\`${{ steps.check.outputs.new_version }}\`](https://github.com/welpo/tabi/commit/${{ steps.check.outputs.new_version }}).

          $BREAKING_WARNING
          ### Changelog

          ${{ steps.check.outputs.main_changelog }}

          $MISC_SECTION

          ---

          Auto-generated by the \"Update tabi theme\" workflow (in \`.github/workflows/update-tabi.yml\`)." > pr_body.md

          # Create PR using the body file
          gh pr create \
            --head "$BRANCH" \
            --title "‚¨ÜÔ∏è Update tabi theme to ${{ steps.check.outputs.new_version }}" \
            --body-file pr_body.md

          # Clean up
          rm pr_body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
